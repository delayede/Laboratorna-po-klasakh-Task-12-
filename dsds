class Paper
    {

        string NameP { get; set; }   
        string Author { get; set; }   
        DateTime Data { get; set; }   

       
        public Paper(string name, string author, DateTime data)
        {
            NameP = name;
            Author = author;
            Data = data;
        }

      
        public Paper() : this("World", "Tolstoy", new DateTime(1889, 7, 1)) { }

        public Paper(string publication, DateTime time)
        {
            Publication = publication;
            Time = time;
        }
        public string Publication;

        public DateTime Time;
    }

    
    enum TimeFrame { Year, TwoYears, Long }

    class ResearchTeam
    {

        private string Theme;        
        private string NameOfOrg;    
        private int NumberOfRed;    
        private TimeFrame Last;     
       
        private List<Paper> Papers = new List<Paper>() { new Paper("pub_1", new DateTime(1881, 6, 2)), new Paper("pub_2", new DateTime(1883, 6, 2)), new Paper("pub_3", new DateTime(1885, 6, 2)) };  //,

       

        public ResearchTeam(string theme, string nameoforg, int numberofred)
        {
            Theme = theme;
            NameOfOrg = nameoforg;
            NumberOfRed = numberofred;

        }

       
        public ResearchTeam() : this("Economy", "Kiber", 46464) { }

        
        public string theme
        {
            get
            {
                return Theme;
            }
        }

        
        public string nameoforg
        {
            get
            {
                return NameOfOrg;
            }
        }

       
        public int numberofred
        {
            get
            {
                return NumberOfRed;
            }
        }

        
        public TimeFrame last
        {
            get
            {
                return Last;
            }
        }

  

        public List<Paper> list
        {
            get { return Papers; }

            set { Papers = value; }
        }

        public void AddPapers(Paper[] papers)
        {
            Papers.AddRange(papers);
        }

        public override string ToString()
        {
            return string.Join(",", Papers.Select(p => p.Publication));
        }

    }
        class Program
        {
            static void Main(string[] args)
            {

                Console.WriteLine();
                ResearchTeam team = new ResearchTeam();
                Paper[] papers = new Paper[2];
            Paper[] papers = new Paper[2];
                papers[0] = new Paper("pub_4", new DateTime(1887, 6, 1));
                papers[1] = new Paper("pub_5", new DateTime(1889, 8, 21));
                team.AddPapers(papers);

                foreach (Paper paper in team.list)
                {
                    Console.WriteLine(paper?.ToString() ?? "нет публикаций");
                    Console.WriteLine(paper.Publication);
                    Console.WriteLine(paper.Time.ToShortDateString());
                }

                Console.WriteLine(team.ToString());

                Console.ReadKey();
            }
        }
    }
    
    
    GG
    
    
    
    public class Person
    {

        private string name;

        private string secondName;

        private DateTime date;

        public Person(string name, string secondName, DateTime date)

        {

            this.name = name;

            this.secondName = secondName;

            this.date = date;

        }

        public Person()

        {

            name = "Славик";

            secondName = "Клюков";

            date = new DateTime(1900, 1, 1);

        }

        public string Name

        {

            get { return name; }

            set { name = value; }

        }

        public string SecondName

        {

            get { return secondName; }

            set { secondName = value; }

        }

        public DateTime Date

        {

            get { return date; }

            set { date = value; }

        }

        public int Year

        {

            get { return date.Year; }

            set { date = new DateTime(value, date.Month, date.Day); }

        }

        public override string ToString()

        {

            return "Имя: " + name + "\n" + "Фамилия: " + secondName + "\n" + "Дата рождения: " + date.ToShortDateString();

        }

        public virtual string ToShortString()

        {

            return "Имя: " + name + "\n" + "Фамилия: " + secondName;

        }

      enum TimeFrame

        {
            Year, TwoYears, Long
        }




        class Paper

        {

            string name;
            Person author;
            DateTime datePaper;

            public Paper(string name, Person author, DateTime datePaper)

            {

                this.name = name;

                this.author = author;

                this.datePaper = datePaper;

            }

            public Paper()

            {

                name = "Дятел";

                author = new Person();

                datePaper = new DateTime(2000, 1, 1);

            }
            public string Name

            {

                get { return name; }

                set { name = value; }

            }
            public Person Author

            {

                get { return author; }

                set { author = value; }

            }

            public DateTime Date

            {

                get { return datePaper; }

                set { datePaper = value; }

            }
            public override string ToString()

            {

                return "назва публікації;: " + name + "\n автор публікації;: " + author.ToString() + "\n Дата публікації.: " + datePaper.ToShortDateString();

            }


            public class ResearchTeam

            {
                private string research;

                private string organization;

                private int RegisterNumber;

                private TimeFrame researchTime;

                private Paper[] publishList;

                public ResearchTeam(string research, string organization, int RegisterNumber, TimeFrame researchTime)

                {
                    this.research = research;

                    this.organization = organization;

                    this.RegisterNumber = RegisterNumber;

                    this.researchTime = researchTime;

                    publishList = new Paper[0];



                }

                public ResearchTeam()
                {
                    research = "WOW";

                    organization = "umbrella";

                    RegisterNumber = 20;

                    researchTime = TimeFrame.Year;

                    publishList = new Paper[0];


                }
            }
               public string research
                {

                    get
                {
                    return research;
                }

                set
                {
                    research = value;
                }

           }

            public string organization
            {

                get
                {
                    return organization;
                }

                set
                {
                    organization = value;
                }

            }
            public int RegisterNumber
            {

                get
                {
                    return RegisterNumber;
                }

                set
                {
                    RegisterNumber = value;
                }

            }

            public TimeFrame researchTime
            {

                get
                {
                    return researchTime;
                }

                set
                {
                    researchTime = value;
                }

            }

            public Paper[] publishList
            {

                get
                {
                    return publishList;
                }

                set
                {
                    publishList = value;
                }

            }
            public Paper Paper
            {
                get
                {
                    return Count == 0 ? null : this.OrderByDescending(p => p.PublishDate).FirstOrDefault();
                }
            }
           
        }
    }
    } 
    
